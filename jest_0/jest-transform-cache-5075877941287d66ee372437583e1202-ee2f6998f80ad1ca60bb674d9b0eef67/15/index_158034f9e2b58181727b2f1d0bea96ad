55c225ee825a40877bb6a0dc5e7b8d7f
const uuid = require("uuid/v1");

const {
  verifySignature
} = require("../../utils/index");

class Transaction {
  constructor({
    senderWallet,
    receiver,
    amount
  }) {
    this.id = uuid();
    this.outputMap = this.createOutputMap({
      senderWallet,
      receiver,
      amount
    });
    this.input = this.createInput({
      senderWallet,
      outputMap: this.outputMap
    });
  }

  static validateTransaction(transaction) {
    const {
      input: {
        address,
        amount,
        signature
      },
      outputMap
    } = transaction;
    const outputTotal = Object.values(outputMap).reduce((total, outputAmount) => total + outputAmount);

    if (amount !== outputTotal) {
      console.log("Log: Invalid transaction from " + address);
      return false;
    }

    if (!verifySignature({
      publicKey: address,
      data: outputMap,
      signature
    })) {
      console.log("Log: Invalid signature from " + address);
      return false;
    }

    return true;
  }

  createOutputMap({
    senderWallet,
    receiver,
    amount
  }) {
    const outputMap = {};
    outputMap[receiver] = amount;
    outputMap[senderWallet.publicKey] = senderWallet.balance - amount;
    return outputMap;
  }

  createInput({
    senderWallet,
    outputMap
  }) {
    return {
      timestamp: Date.now(),
      amount: senderWallet.balance,
      address: senderWallet.publicKey,
      signature: senderWallet.sign(outputMap)
    };
  }

}

module.exports = Transaction;
//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbImluZGV4LmpzIl0sIm5hbWVzIjpbInV1aWQiLCJyZXF1aXJlIiwidmVyaWZ5U2lnbmF0dXJlIiwiVHJhbnNhY3Rpb24iLCJjb25zdHJ1Y3RvciIsInNlbmRlcldhbGxldCIsInJlY2VpdmVyIiwiYW1vdW50IiwiaWQiLCJvdXRwdXRNYXAiLCJjcmVhdGVPdXRwdXRNYXAiLCJpbnB1dCIsImNyZWF0ZUlucHV0IiwidmFsaWRhdGVUcmFuc2FjdGlvbiIsInRyYW5zYWN0aW9uIiwiYWRkcmVzcyIsInNpZ25hdHVyZSIsIm91dHB1dFRvdGFsIiwiT2JqZWN0IiwidmFsdWVzIiwicmVkdWNlIiwidG90YWwiLCJvdXRwdXRBbW91bnQiLCJjb25zb2xlIiwibG9nIiwicHVibGljS2V5IiwiZGF0YSIsImJhbGFuY2UiLCJ0aW1lc3RhbXAiLCJEYXRlIiwibm93Iiwic2lnbiIsIm1vZHVsZSIsImV4cG9ydHMiXSwibWFwcGluZ3MiOiJBQUFBLE1BQU1BLElBQUksR0FBR0MsT0FBTyxDQUFDLFNBQUQsQ0FBcEI7O0FBQ0EsTUFBTTtBQUFFQyxFQUFBQTtBQUFGLElBQXNCRCxPQUFPLENBQUMsbUJBQUQsQ0FBbkM7O0FBRUEsTUFBTUUsV0FBTixDQUFrQjtBQUNoQkMsRUFBQUEsV0FBVyxDQUFDO0FBQUVDLElBQUFBLFlBQUY7QUFBZ0JDLElBQUFBLFFBQWhCO0FBQTBCQyxJQUFBQTtBQUExQixHQUFELEVBQXFDO0FBQzlDLFNBQUtDLEVBQUwsR0FBVVIsSUFBSSxFQUFkO0FBQ0EsU0FBS1MsU0FBTCxHQUFpQixLQUFLQyxlQUFMLENBQXFCO0FBQUVMLE1BQUFBLFlBQUY7QUFBZ0JDLE1BQUFBLFFBQWhCO0FBQTBCQyxNQUFBQTtBQUExQixLQUFyQixDQUFqQjtBQUNBLFNBQUtJLEtBQUwsR0FBYSxLQUFLQyxXQUFMLENBQWlCO0FBQUVQLE1BQUFBLFlBQUY7QUFBZ0JJLE1BQUFBLFNBQVMsRUFBRSxLQUFLQTtBQUFoQyxLQUFqQixDQUFiO0FBQ0Q7O0FBRUQsU0FBT0ksbUJBQVAsQ0FBMkJDLFdBQTNCLEVBQXdDO0FBQ3RDLFVBQU07QUFDSkgsTUFBQUEsS0FBSyxFQUFFO0FBQUVJLFFBQUFBLE9BQUY7QUFBV1IsUUFBQUEsTUFBWDtBQUFtQlMsUUFBQUE7QUFBbkIsT0FESDtBQUVKUCxNQUFBQTtBQUZJLFFBR0ZLLFdBSEo7QUFLQSxVQUFNRyxXQUFXLEdBQUdDLE1BQU0sQ0FBQ0MsTUFBUCxDQUFjVixTQUFkLEVBQXlCVyxNQUF6QixDQUNsQixDQUFDQyxLQUFELEVBQVFDLFlBQVIsS0FBeUJELEtBQUssR0FBR0MsWUFEZixDQUFwQjs7QUFJQSxRQUFJZixNQUFNLEtBQUtVLFdBQWYsRUFBNEI7QUFDMUJNLE1BQUFBLE9BQU8sQ0FBQ0MsR0FBUixDQUFZLG1DQUFtQ1QsT0FBL0M7QUFDQSxhQUFPLEtBQVA7QUFDRDs7QUFDRCxRQUFJLENBQUNiLGVBQWUsQ0FBQztBQUFFdUIsTUFBQUEsU0FBUyxFQUFFVixPQUFiO0FBQXNCVyxNQUFBQSxJQUFJLEVBQUVqQixTQUE1QjtBQUF1Q08sTUFBQUE7QUFBdkMsS0FBRCxDQUFwQixFQUEwRTtBQUN4RU8sTUFBQUEsT0FBTyxDQUFDQyxHQUFSLENBQVksaUNBQWlDVCxPQUE3QztBQUNBLGFBQU8sS0FBUDtBQUNEOztBQUNELFdBQU8sSUFBUDtBQUNEOztBQUVETCxFQUFBQSxlQUFlLENBQUM7QUFBRUwsSUFBQUEsWUFBRjtBQUFnQkMsSUFBQUEsUUFBaEI7QUFBMEJDLElBQUFBO0FBQTFCLEdBQUQsRUFBcUM7QUFDbEQsVUFBTUUsU0FBUyxHQUFHLEVBQWxCO0FBRUFBLElBQUFBLFNBQVMsQ0FBQ0gsUUFBRCxDQUFULEdBQXNCQyxNQUF0QjtBQUNBRSxJQUFBQSxTQUFTLENBQUNKLFlBQVksQ0FBQ29CLFNBQWQsQ0FBVCxHQUFvQ3BCLFlBQVksQ0FBQ3NCLE9BQWIsR0FBdUJwQixNQUEzRDtBQUVBLFdBQU9FLFNBQVA7QUFDRDs7QUFFREcsRUFBQUEsV0FBVyxDQUFDO0FBQUVQLElBQUFBLFlBQUY7QUFBZ0JJLElBQUFBO0FBQWhCLEdBQUQsRUFBOEI7QUFDdkMsV0FBTztBQUNMbUIsTUFBQUEsU0FBUyxFQUFFQyxJQUFJLENBQUNDLEdBQUwsRUFETjtBQUVMdkIsTUFBQUEsTUFBTSxFQUFFRixZQUFZLENBQUNzQixPQUZoQjtBQUdMWixNQUFBQSxPQUFPLEVBQUVWLFlBQVksQ0FBQ29CLFNBSGpCO0FBSUxULE1BQUFBLFNBQVMsRUFBRVgsWUFBWSxDQUFDMEIsSUFBYixDQUFrQnRCLFNBQWxCO0FBSk4sS0FBUDtBQU1EOztBQTVDZTs7QUErQ2xCdUIsTUFBTSxDQUFDQyxPQUFQLEdBQWlCOUIsV0FBakIiLCJzb3VyY2VzQ29udGVudCI6WyJjb25zdCB1dWlkID0gcmVxdWlyZShcInV1aWQvdjFcIik7XHJcbmNvbnN0IHsgdmVyaWZ5U2lnbmF0dXJlIH0gPSByZXF1aXJlKFwiLi4vLi4vdXRpbHMvaW5kZXhcIik7XHJcblxyXG5jbGFzcyBUcmFuc2FjdGlvbiB7XHJcbiAgY29uc3RydWN0b3IoeyBzZW5kZXJXYWxsZXQsIHJlY2VpdmVyLCBhbW91bnQgfSkge1xyXG4gICAgdGhpcy5pZCA9IHV1aWQoKTtcclxuICAgIHRoaXMub3V0cHV0TWFwID0gdGhpcy5jcmVhdGVPdXRwdXRNYXAoeyBzZW5kZXJXYWxsZXQsIHJlY2VpdmVyLCBhbW91bnQgfSk7XHJcbiAgICB0aGlzLmlucHV0ID0gdGhpcy5jcmVhdGVJbnB1dCh7IHNlbmRlcldhbGxldCwgb3V0cHV0TWFwOiB0aGlzLm91dHB1dE1hcCB9KTtcclxuICB9XHJcblxyXG4gIHN0YXRpYyB2YWxpZGF0ZVRyYW5zYWN0aW9uKHRyYW5zYWN0aW9uKSB7XHJcbiAgICBjb25zdCB7XHJcbiAgICAgIGlucHV0OiB7IGFkZHJlc3MsIGFtb3VudCwgc2lnbmF0dXJlIH0sXHJcbiAgICAgIG91dHB1dE1hcFxyXG4gICAgfSA9IHRyYW5zYWN0aW9uO1xyXG5cclxuICAgIGNvbnN0IG91dHB1dFRvdGFsID0gT2JqZWN0LnZhbHVlcyhvdXRwdXRNYXApLnJlZHVjZShcclxuICAgICAgKHRvdGFsLCBvdXRwdXRBbW91bnQpID0+IHRvdGFsICsgb3V0cHV0QW1vdW50XHJcbiAgICApO1xyXG5cclxuICAgIGlmIChhbW91bnQgIT09IG91dHB1dFRvdGFsKSB7XHJcbiAgICAgIGNvbnNvbGUubG9nKFwiTG9nOiBJbnZhbGlkIHRyYW5zYWN0aW9uIGZyb20gXCIgKyBhZGRyZXNzKTtcclxuICAgICAgcmV0dXJuIGZhbHNlO1xyXG4gICAgfVxyXG4gICAgaWYgKCF2ZXJpZnlTaWduYXR1cmUoeyBwdWJsaWNLZXk6IGFkZHJlc3MsIGRhdGE6IG91dHB1dE1hcCwgc2lnbmF0dXJlIH0pKSB7XHJcbiAgICAgIGNvbnNvbGUubG9nKFwiTG9nOiBJbnZhbGlkIHNpZ25hdHVyZSBmcm9tIFwiICsgYWRkcmVzcyk7XHJcbiAgICAgIHJldHVybiBmYWxzZTtcclxuICAgIH1cclxuICAgIHJldHVybiB0cnVlO1xyXG4gIH1cclxuXHJcbiAgY3JlYXRlT3V0cHV0TWFwKHsgc2VuZGVyV2FsbGV0LCByZWNlaXZlciwgYW1vdW50IH0pIHtcclxuICAgIGNvbnN0IG91dHB1dE1hcCA9IHt9O1xyXG5cclxuICAgIG91dHB1dE1hcFtyZWNlaXZlcl0gPSBhbW91bnQ7XHJcbiAgICBvdXRwdXRNYXBbc2VuZGVyV2FsbGV0LnB1YmxpY0tleV0gPSBzZW5kZXJXYWxsZXQuYmFsYW5jZSAtIGFtb3VudDtcclxuXHJcbiAgICByZXR1cm4gb3V0cHV0TWFwO1xyXG4gIH1cclxuXHJcbiAgY3JlYXRlSW5wdXQoeyBzZW5kZXJXYWxsZXQsIG91dHB1dE1hcCB9KSB7XHJcbiAgICByZXR1cm4ge1xyXG4gICAgICB0aW1lc3RhbXA6IERhdGUubm93KCksXHJcbiAgICAgIGFtb3VudDogc2VuZGVyV2FsbGV0LmJhbGFuY2UsXHJcbiAgICAgIGFkZHJlc3M6IHNlbmRlcldhbGxldC5wdWJsaWNLZXksXHJcbiAgICAgIHNpZ25hdHVyZTogc2VuZGVyV2FsbGV0LnNpZ24ob3V0cHV0TWFwKVxyXG4gICAgfTtcclxuICB9XHJcbn1cclxuXHJcbm1vZHVsZS5leHBvcnRzID0gVHJhbnNhY3Rpb247XHJcbiJdfQ==