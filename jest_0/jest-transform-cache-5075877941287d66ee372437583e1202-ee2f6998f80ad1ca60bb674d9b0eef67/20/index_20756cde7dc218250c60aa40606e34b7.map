{"version":3,"sources":["index.js"],"names":["uuid","require","verifySignature","Transaction","constructor","senderWallet","receiver","amount","id","outputMap","createOutputMap","input","createInput","publicKey","balance","timestamp","Date","now","address","signature","sign","validateTransaction","transaction","outputTotal","Object","values","reduce","total","outputAmount","console","error","data","log","module","exports"],"mappings":"AAAA,MAAMA,IAAI,GAAGC,OAAO,CAAC,SAAD,CAApB;;AACA,MAAM;AAAEC,EAAAA;AAAF,IAAsBD,OAAO,CAAC,mBAAD,CAAnC;;AAEA,MAAME,WAAN,CAAkB;AAChBC,EAAAA,WAAW,CAAC;AAAEC,IAAAA,YAAF;AAAgBC,IAAAA,QAAhB;AAA0BC,IAAAA;AAA1B,GAAD,EAAqC;AAC9C,SAAKC,EAAL,GAAUR,IAAI,EAAd;AACA,SAAKS,SAAL,GAAiB,KAAKC,eAAL,CAAqB;AAAEL,MAAAA,YAAF;AAAgBC,MAAAA,QAAhB;AAA0BC,MAAAA;AAA1B,KAArB,CAAjB;AACA,SAAKI,KAAL,GAAa,KAAKC,WAAL,CAAiB;AAAEP,MAAAA,YAAF;AAAgBI,MAAAA,SAAS,EAAE,KAAKA;AAAhC,KAAjB,CAAb;AACD;;AAEDC,EAAAA,eAAe,CAAC;AAAEL,IAAAA,YAAF;AAAgBC,IAAAA,QAAhB;AAA0BC,IAAAA;AAA1B,GAAD,EAAqC;AAClD,UAAME,SAAS,GAAG,EAAlB;AAEAA,IAAAA,SAAS,CAACH,QAAD,CAAT,GAAsBC,MAAtB;AACAE,IAAAA,SAAS,CAACJ,YAAY,CAACQ,SAAd,CAAT,GAAoCR,YAAY,CAACS,OAAb,GAAuBP,MAA3D;AAEA,WAAOE,SAAP;AACD;;AAEDG,EAAAA,WAAW,CAAC;AAAEP,IAAAA,YAAF;AAAgBI,IAAAA;AAAhB,GAAD,EAA8B;AACvC,WAAO;AACLM,MAAAA,SAAS,EAAEC,IAAI,CAACC,GAAL,EADN;AAELV,MAAAA,MAAM,EAAEF,YAAY,CAACS,OAFhB;AAGLI,MAAAA,OAAO,EAAEb,YAAY,CAACQ,SAHjB;AAILM,MAAAA,SAAS,EAAEd,YAAY,CAACe,IAAb,CAAkBX,SAAlB;AAJN,KAAP;AAMD;;AAED,SAAOY,mBAAP,CAA2BC,WAA3B,EAAwC;AACtC,UAAM;AACJX,MAAAA,KAAK,EAAE;AAAEO,QAAAA,OAAF;AAAWX,QAAAA,MAAX;AAAmBY,QAAAA;AAAnB,OADH;AAEJV,MAAAA;AAFI,QAGFa,WAHJ;AAKA,UAAMC,WAAW,GAAGC,MAAM,CAACC,MAAP,CAAchB,SAAd,EAAyBiB,MAAzB,CAClB,CAACC,KAAD,EAAQC,YAAR,KAAyBD,KAAK,GAAGC,YADf,CAApB;;AAIA,QAAIrB,MAAM,KAAKgB,WAAf,EAA4B;AAC1BM,MAAAA,OAAO,CAACC,KAAR,CAAc,qCAAqCZ,OAAnD;AACA,aAAO,KAAP;AACD;;AACD,QAAI,CAAChB,eAAe,CAAC;AAAEW,MAAAA,SAAS,EAAEK,OAAb;AAAsBa,MAAAA,IAAI,EAAEtB,SAA5B;AAAuCU,MAAAA;AAAvC,KAAD,CAApB,EAA0E;AACxEU,MAAAA,OAAO,CAACG,GAAR,CAAY,iCAAiCd,OAA7C;AACA,aAAO,KAAP;AACD;;AACD,WAAO,IAAP;AACD;;AA5Ce;;AA+ClBe,MAAM,CAACC,OAAP,GAAiB/B,WAAjB","sourcesContent":["const uuid = require(\"uuid/v1\");\r\nconst { verifySignature } = require(\"../../utils/index\");\r\n\r\nclass Transaction {\r\n  constructor({ senderWallet, receiver, amount }) {\r\n    this.id = uuid();\r\n    this.outputMap = this.createOutputMap({ senderWallet, receiver, amount });\r\n    this.input = this.createInput({ senderWallet, outputMap: this.outputMap });\r\n  }\r\n\r\n  createOutputMap({ senderWallet, receiver, amount }) {\r\n    const outputMap = {};\r\n\r\n    outputMap[receiver] = amount;\r\n    outputMap[senderWallet.publicKey] = senderWallet.balance - amount;\r\n\r\n    return outputMap;\r\n  }\r\n\r\n  createInput({ senderWallet, outputMap }) {\r\n    return {\r\n      timestamp: Date.now(),\r\n      amount: senderWallet.balance,\r\n      address: senderWallet.publicKey,\r\n      signature: senderWallet.sign(outputMap)\r\n    };\r\n  }\r\n\r\n  static validateTransaction(transaction) {\r\n    const {\r\n      input: { address, amount, signature },\r\n      outputMap\r\n    } = transaction;\r\n\r\n    const outputTotal = Object.values(outputMap).reduce(\r\n      (total, outputAmount) => total + outputAmount\r\n    );\r\n\r\n    if (amount !== outputTotal) {\r\n      console.error(\"error: Invalid transaction from \" + address);\r\n      return false;\r\n    }\r\n    if (!verifySignature({ publicKey: address, data: outputMap, signature })) {\r\n      console.log(\"Log: Invalid signature from \" + address);\r\n      return false;\r\n    }\r\n    return true;\r\n  }\r\n}\r\n\r\nmodule.exports = Transaction;\r\n"]}