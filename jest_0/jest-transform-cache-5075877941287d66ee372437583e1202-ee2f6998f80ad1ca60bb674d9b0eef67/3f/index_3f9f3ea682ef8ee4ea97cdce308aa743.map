{"version":3,"sources":["index.js"],"names":["INITIAL_BALANCE","require","ec","cryptoHash","Wallet","constructor","balance","keyPair","genKeyPair","publicKey","getPublic","encode","sign","data","module","exports"],"mappings":"AAAA,MAAM;AAAEA,EAAAA;AAAF,IAAsBC,OAAO,CAAC,WAAD,CAAnC;;AACA,MAAM;AAAEC,EAAAA;AAAF,IAASD,OAAO,CAAC,UAAD,CAAtB;;AACA,MAAME,UAAU,GAAGF,OAAO,CAAC,sBAAD,CAA1B;;AAEA,MAAMG,MAAN,CAAa;AACXC,EAAAA,WAAW,GAAG;AACZ,SAAKC,OAAL,GAAeN,eAAf;AAEA,SAAKO,OAAL,GAAeL,EAAE,CAACM,UAAH,EAAf;AAEA,SAAKC,SAAL,GAAiBF,OAAO,CAACG,SAAR,GAAoBC,MAApB,CAA2B,KAA3B,CAAjB;AACD;;AAEDC,EAAAA,IAAI,CAACC,IAAD,EAAO;AACT,WAAO,KAAKN,OAAL,CAAaK,IAAb,CAAkBT,UAAU,CAACU,IAAD,CAA5B,CAAP;AACD;;AAXU;;AAcbC,MAAM,CAACC,OAAP,GAAiBX,MAAjB","sourcesContent":["const { INITIAL_BALANCE } = require(\"../config\");\r\nconst { ec } = require(\"../utils\");\r\nconst cryptoHash = require(\"../utils/crypto-hash\");\r\n\r\nclass Wallet {\r\n  constructor() {\r\n    this.balance = INITIAL_BALANCE;\r\n\r\n    this.keyPair = ec.genKeyPair();\r\n    \r\n    this.publicKey = keyPair.getPublic().encode(\"hex\");\r\n  }\r\n\r\n  sign(data) {\r\n    return this.keyPair.sign(cryptoHash(data));\r\n  }\r\n}\r\n\r\nmodule.exports = Wallet;\r\n"]}