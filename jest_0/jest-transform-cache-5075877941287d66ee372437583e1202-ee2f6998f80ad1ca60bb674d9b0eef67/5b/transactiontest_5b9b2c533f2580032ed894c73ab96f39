49c3d2cd7dc6e91a1182d6de2b78ebf5
const Transaction = require("../wallet/transaction/index");

const Wallet = require("../wallet/index");

describe("Transaction", () => {
  let transaction, senderWallet, receiver, amount;
  beforeEach(() => {
    senderWallet = new Wallet();
    receiver = "receiver-publicKey";
    amount = 20;
    transaction = new Transaction({
      senderWallet,
      receiver,
      amount
    });
  });
  it("has an `id`", () => {
    expect(transaction).toHaveProperty("id");
  });
  describe("outputMap", () => {
    it("has an outputMap", () => {
      expect(transaction).toHaveProperty("outputMap");
    });
    it("outputs amount of receiver", () => {
      expect(transaction.outputMap[receiver]).toEqual(amount);
    });
    it("outputs the remaining balance of the sender", () => {
      expect(transaction.outputMap[senderWallet.publicKey]).toEqual(senderWallet.balance - amount);
    });
  });
  describe("input", () => {
    it("has an `input`", () => {
      expect(transaction).toHaveProperty("input");
    });
    it("has `timestamp` in the `input`", () => {
      expect(transaction.input).toHaveProperty("timestamp");
    });
  });
});
//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbInRyYW5zYWN0aW9uLnRlc3QuanMiXSwibmFtZXMiOlsiVHJhbnNhY3Rpb24iLCJyZXF1aXJlIiwiV2FsbGV0IiwiZGVzY3JpYmUiLCJ0cmFuc2FjdGlvbiIsInNlbmRlcldhbGxldCIsInJlY2VpdmVyIiwiYW1vdW50IiwiYmVmb3JlRWFjaCIsIml0IiwiZXhwZWN0IiwidG9IYXZlUHJvcGVydHkiLCJvdXRwdXRNYXAiLCJ0b0VxdWFsIiwicHVibGljS2V5IiwiYmFsYW5jZSIsImlucHV0Il0sIm1hcHBpbmdzIjoiQUFBQSxNQUFNQSxXQUFXLEdBQUdDLE9BQU8sQ0FBQyw2QkFBRCxDQUEzQjs7QUFDQSxNQUFNQyxNQUFNLEdBQUdELE9BQU8sQ0FBQyxpQkFBRCxDQUF0Qjs7QUFFQUUsUUFBUSxDQUFDLGFBQUQsRUFBZ0IsTUFBTTtBQUM1QixNQUFJQyxXQUFKLEVBQWlCQyxZQUFqQixFQUErQkMsUUFBL0IsRUFBeUNDLE1BQXpDO0FBRUFDLEVBQUFBLFVBQVUsQ0FBQyxNQUFNO0FBQ2ZILElBQUFBLFlBQVksR0FBRyxJQUFJSCxNQUFKLEVBQWY7QUFDQUksSUFBQUEsUUFBUSxHQUFHLG9CQUFYO0FBQ0FDLElBQUFBLE1BQU0sR0FBRyxFQUFUO0FBQ0FILElBQUFBLFdBQVcsR0FBRyxJQUFJSixXQUFKLENBQWdCO0FBQUVLLE1BQUFBLFlBQUY7QUFBZ0JDLE1BQUFBLFFBQWhCO0FBQTBCQyxNQUFBQTtBQUExQixLQUFoQixDQUFkO0FBQ0QsR0FMUyxDQUFWO0FBT0FFLEVBQUFBLEVBQUUsQ0FBQyxhQUFELEVBQWdCLE1BQU07QUFDdEJDLElBQUFBLE1BQU0sQ0FBQ04sV0FBRCxDQUFOLENBQW9CTyxjQUFwQixDQUFtQyxJQUFuQztBQUNELEdBRkMsQ0FBRjtBQUlBUixFQUFBQSxRQUFRLENBQUMsV0FBRCxFQUFjLE1BQU07QUFDMUJNLElBQUFBLEVBQUUsQ0FBQyxrQkFBRCxFQUFxQixNQUFNO0FBQzNCQyxNQUFBQSxNQUFNLENBQUNOLFdBQUQsQ0FBTixDQUFvQk8sY0FBcEIsQ0FBbUMsV0FBbkM7QUFDRCxLQUZDLENBQUY7QUFJQUYsSUFBQUEsRUFBRSxDQUFDLDRCQUFELEVBQStCLE1BQU07QUFDckNDLE1BQUFBLE1BQU0sQ0FBQ04sV0FBVyxDQUFDUSxTQUFaLENBQXNCTixRQUF0QixDQUFELENBQU4sQ0FBd0NPLE9BQXhDLENBQWdETixNQUFoRDtBQUNELEtBRkMsQ0FBRjtBQUlBRSxJQUFBQSxFQUFFLENBQUMsNkNBQUQsRUFBZ0QsTUFBTTtBQUN0REMsTUFBQUEsTUFBTSxDQUFDTixXQUFXLENBQUNRLFNBQVosQ0FBc0JQLFlBQVksQ0FBQ1MsU0FBbkMsQ0FBRCxDQUFOLENBQXNERCxPQUF0RCxDQUNFUixZQUFZLENBQUNVLE9BQWIsR0FBdUJSLE1BRHpCO0FBR0QsS0FKQyxDQUFGO0FBS0QsR0FkTyxDQUFSO0FBZ0JBSixFQUFBQSxRQUFRLENBQUMsT0FBRCxFQUFVLE1BQU07QUFDdEJNLElBQUFBLEVBQUUsQ0FBQyxnQkFBRCxFQUFtQixNQUFNO0FBQ3pCQyxNQUFBQSxNQUFNLENBQUNOLFdBQUQsQ0FBTixDQUFvQk8sY0FBcEIsQ0FBbUMsT0FBbkM7QUFDRCxLQUZDLENBQUY7QUFHQUYsSUFBQUEsRUFBRSxDQUFDLGdDQUFELEVBQW1DLE1BQU07QUFDekNDLE1BQUFBLE1BQU0sQ0FBQ04sV0FBVyxDQUFDWSxLQUFiLENBQU4sQ0FBMEJMLGNBQTFCLENBQXlDLFdBQXpDO0FBQ0QsS0FGQyxDQUFGO0FBR0QsR0FQTyxDQUFSO0FBUUQsQ0F0Q08sQ0FBUiIsInNvdXJjZXNDb250ZW50IjpbImNvbnN0IFRyYW5zYWN0aW9uID0gcmVxdWlyZShcIi4uL3dhbGxldC90cmFuc2FjdGlvbi9pbmRleFwiKTtcclxuY29uc3QgV2FsbGV0ID0gcmVxdWlyZShcIi4uL3dhbGxldC9pbmRleFwiKTtcclxuXHJcbmRlc2NyaWJlKFwiVHJhbnNhY3Rpb25cIiwgKCkgPT4ge1xyXG4gIGxldCB0cmFuc2FjdGlvbiwgc2VuZGVyV2FsbGV0LCByZWNlaXZlciwgYW1vdW50O1xyXG5cclxuICBiZWZvcmVFYWNoKCgpID0+IHtcclxuICAgIHNlbmRlcldhbGxldCA9IG5ldyBXYWxsZXQoKTtcclxuICAgIHJlY2VpdmVyID0gXCJyZWNlaXZlci1wdWJsaWNLZXlcIjtcclxuICAgIGFtb3VudCA9IDIwO1xyXG4gICAgdHJhbnNhY3Rpb24gPSBuZXcgVHJhbnNhY3Rpb24oeyBzZW5kZXJXYWxsZXQsIHJlY2VpdmVyLCBhbW91bnQgfSk7XHJcbiAgfSk7XHJcblxyXG4gIGl0KFwiaGFzIGFuIGBpZGBcIiwgKCkgPT4ge1xyXG4gICAgZXhwZWN0KHRyYW5zYWN0aW9uKS50b0hhdmVQcm9wZXJ0eShcImlkXCIpO1xyXG4gIH0pO1xyXG5cclxuICBkZXNjcmliZShcIm91dHB1dE1hcFwiLCAoKSA9PiB7XHJcbiAgICBpdChcImhhcyBhbiBvdXRwdXRNYXBcIiwgKCkgPT4ge1xyXG4gICAgICBleHBlY3QodHJhbnNhY3Rpb24pLnRvSGF2ZVByb3BlcnR5KFwib3V0cHV0TWFwXCIpO1xyXG4gICAgfSk7XHJcblxyXG4gICAgaXQoXCJvdXRwdXRzIGFtb3VudCBvZiByZWNlaXZlclwiLCAoKSA9PiB7XHJcbiAgICAgIGV4cGVjdCh0cmFuc2FjdGlvbi5vdXRwdXRNYXBbcmVjZWl2ZXJdKS50b0VxdWFsKGFtb3VudCk7XHJcbiAgICB9KTtcclxuXHJcbiAgICBpdChcIm91dHB1dHMgdGhlIHJlbWFpbmluZyBiYWxhbmNlIG9mIHRoZSBzZW5kZXJcIiwgKCkgPT4ge1xyXG4gICAgICBleHBlY3QodHJhbnNhY3Rpb24ub3V0cHV0TWFwW3NlbmRlcldhbGxldC5wdWJsaWNLZXldKS50b0VxdWFsKFxyXG4gICAgICAgIHNlbmRlcldhbGxldC5iYWxhbmNlIC0gYW1vdW50XHJcbiAgICAgICk7XHJcbiAgICB9KTtcclxuICB9KTtcclxuXHJcbiAgZGVzY3JpYmUoXCJpbnB1dFwiLCAoKSA9PiB7XHJcbiAgICBpdChcImhhcyBhbiBgaW5wdXRgXCIsICgpID0+IHtcclxuICAgICAgZXhwZWN0KHRyYW5zYWN0aW9uKS50b0hhdmVQcm9wZXJ0eShcImlucHV0XCIpO1xyXG4gICAgfSk7XHJcbiAgICBpdChcImhhcyBgdGltZXN0YW1wYCBpbiB0aGUgYGlucHV0YFwiLCAoKSA9PiB7XHJcbiAgICAgIGV4cGVjdCh0cmFuc2FjdGlvbi5pbnB1dCkudG9IYXZlUHJvcGVydHkoXCJ0aW1lc3RhbXBcIik7XHJcbiAgICB9KTtcclxuICB9KTtcclxufSk7XHJcbiJdfQ==