{"version":3,"sources":["index.js"],"names":["EC","require","ec","cryptoHash","verifySignature","publicKey","data","signature","keyFromPublic","verify","module","exports"],"mappings":"AAAA,MAAMA,EAAE,GAAGC,OAAO,CAAC,UAAD,CAAP,CAAoBC,EAA/B;;AACA,MAAMC,UAAU,GAAGF,OAAO,CAAC,eAAD,CAA1B;;AAEA,MAAMC,EAAE,GAAG,IAAIF,EAAJ,CAAO,WAAP,CAAX;;AAEA,MAAMI,eAAe,GAAG,CAAC;AAAEC,EAAAA,SAAF;AAAaC,EAAAA,IAAb;AAAmBC,EAAAA;AAAnB,CAAD,KAAoC;AAC1D,QAAMC,aAAa,GAAGN,EAAE,CAACM,aAAH,CAAiBH,SAAjB,EAA4B,KAA5B,CAAtB;AACA,SAAOG,aAAa,CAACC,MAAd,CAAqBN,UAAU,CAACG,IAAD,CAA/B,EAAuCC,SAAvC,CAAP;AACD,CAHD;;AAKAG,MAAM,CAACC,OAAP,GAAiB;AAAET,EAAAA,EAAF;AAAME,EAAAA;AAAN,CAAjB","sourcesContent":["const EC = require(\"elliptic\").ec;\r\nconst cryptoHash = require(\"./crypto-hash\");\r\n\r\nconst ec = new EC(\"secp256k1\");\r\n\r\nconst verifySignature = ({ publicKey, data, signature }) => {\r\n  const keyFromPublic = ec.keyFromPublic(publicKey, 'hex');\r\n  return keyFromPublic.verify(cryptoHash(data), signature);\r\n};\r\n\r\nmodule.exports = { ec, verifySignature };\r\n"]}