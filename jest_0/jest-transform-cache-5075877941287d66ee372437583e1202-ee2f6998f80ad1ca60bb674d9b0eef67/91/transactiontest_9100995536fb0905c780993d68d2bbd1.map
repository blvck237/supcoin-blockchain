{"version":3,"sources":["transaction.test.js"],"names":["Transaction","require","Wallet","verifySignature","describe","transaction","senderWallet","receiver","amount","beforeEach","it","expect","toHaveProperty","outputMap","toEqual","publicKey","balance","input","address","data","signature","toBe"],"mappings":"AAAA,MAAMA,WAAW,GAAGC,OAAO,CAAC,6BAAD,CAA3B;;AACA,MAAMC,MAAM,GAAGD,OAAO,CAAC,iBAAD,CAAtB;;AACA,MAAM;AAAEE,EAAAA;AAAF,IAAsBF,OAAO,CAAC,gBAAD,CAAnC;;AACAG,QAAQ,CAAC,aAAD,EAAgB,MAAM;AAC5B,MAAIC,WAAJ,EAAiBC,YAAjB,EAA+BC,QAA/B,EAAyCC,MAAzC;AAEAC,EAAAA,UAAU,CAAC,MAAM;AACfH,IAAAA,YAAY,GAAG,IAAIJ,MAAJ,EAAf;AACAK,IAAAA,QAAQ,GAAG,oBAAX;AACAC,IAAAA,MAAM,GAAG,EAAT;AACAH,IAAAA,WAAW,GAAG,IAAIL,WAAJ,CAAgB;AAAEM,MAAAA,YAAF;AAAgBC,MAAAA,QAAhB;AAA0BC,MAAAA;AAA1B,KAAhB,CAAd;AACD,GALS,CAAV;AAOAE,EAAAA,EAAE,CAAC,aAAD,EAAgB,MAAM;AACtBC,IAAAA,MAAM,CAACN,WAAD,CAAN,CAAoBO,cAApB,CAAmC,IAAnC;AACD,GAFC,CAAF;AAIAR,EAAAA,QAAQ,CAAC,WAAD,EAAc,MAAM;AAC1BM,IAAAA,EAAE,CAAC,kBAAD,EAAqB,MAAM;AAC3BC,MAAAA,MAAM,CAACN,WAAD,CAAN,CAAoBO,cAApB,CAAmC,WAAnC;AACD,KAFC,CAAF;AAIAF,IAAAA,EAAE,CAAC,4BAAD,EAA+B,MAAM;AACrCC,MAAAA,MAAM,CAACN,WAAW,CAACQ,SAAZ,CAAsBN,QAAtB,CAAD,CAAN,CAAwCO,OAAxC,CAAgDN,MAAhD;AACD,KAFC,CAAF;AAIAE,IAAAA,EAAE,CAAC,6CAAD,EAAgD,MAAM;AACtDC,MAAAA,MAAM,CAACN,WAAW,CAACQ,SAAZ,CAAsBP,YAAY,CAACS,SAAnC,CAAD,CAAN,CAAsDD,OAAtD,CACER,YAAY,CAACU,OAAb,GAAuBR,MADzB;AAGD,KAJC,CAAF;AAKD,GAdO,CAAR;AAgBAJ,EAAAA,QAAQ,CAAC,OAAD,EAAU,MAAM;AACtBM,IAAAA,EAAE,CAAC,gBAAD,EAAmB,MAAM;AACzBC,MAAAA,MAAM,CAACN,WAAD,CAAN,CAAoBO,cAApB,CAAmC,OAAnC;AACD,KAFC,CAAF;AAIAF,IAAAA,EAAE,CAAC,gCAAD,EAAmC,MAAM;AACzCC,MAAAA,MAAM,CAACN,WAAW,CAACY,KAAb,CAAN,CAA0BL,cAA1B,CAAyC,WAAzC;AACD,KAFC,CAAF;AAIAF,IAAAA,EAAE,CAAC,iDAAD,EAAoD,MAAM;AAC1DC,MAAAA,MAAM,CAACN,WAAW,CAACY,KAAZ,CAAkBT,MAAnB,CAAN,CAAiCM,OAAjC,CAAyCR,YAAY,CAACU,OAAtD;AACD,KAFC,CAAF;AAIAN,IAAAA,EAAE,CAAC,oDAAD,EAAuD,MAAM;AAC7DC,MAAAA,MAAM,CAACN,WAAW,CAACY,KAAZ,CAAkBC,OAAnB,CAAN,CAAkCJ,OAAlC,CAA0CR,YAAY,CAACS,SAAvD;AACD,KAFC,CAAF;AAIAL,IAAAA,EAAE,CAAC,iBAAD,EAAoB,MAAM;AAC1BC,MAAAA,MAAM,CACJR,eAAe,CAAC;AACdY,QAAAA,SAAS,EAAET,YAAY,CAACS,SADV;AAEdI,QAAAA,IAAI,EAAEd,WAAW,CAACQ,SAFJ;AAGdO,QAAAA,SAAS,EAAEf,WAAW,CAACY,KAAZ,CAAkBG;AAHf,OAAD,CADX,CAAN,CAMEC,IANF,CAMO,IANP;AAOD,KARC,CAAF;AASD,GA1BO,CAAR;AA2BD,CAzDO,CAAR","sourcesContent":["const Transaction = require(\"../wallet/transaction/index\");\r\nconst Wallet = require(\"../wallet/index\");\r\nconst { verifySignature } = require(\"../utils/index\");\r\ndescribe(\"Transaction\", () => {\r\n  let transaction, senderWallet, receiver, amount;\r\n\r\n  beforeEach(() => {\r\n    senderWallet = new Wallet();\r\n    receiver = \"receiver-publicKey\";\r\n    amount = 20;\r\n    transaction = new Transaction({ senderWallet, receiver, amount });\r\n  });\r\n\r\n  it(\"has an `id`\", () => {\r\n    expect(transaction).toHaveProperty(\"id\");\r\n  });\r\n\r\n  describe(\"outputMap\", () => {\r\n    it(\"has an outputMap\", () => {\r\n      expect(transaction).toHaveProperty(\"outputMap\");\r\n    });\r\n\r\n    it(\"outputs amount of receiver\", () => {\r\n      expect(transaction.outputMap[receiver]).toEqual(amount);\r\n    });\r\n\r\n    it(\"outputs the remaining balance of the sender\", () => {\r\n      expect(transaction.outputMap[senderWallet.publicKey]).toEqual(\r\n        senderWallet.balance - amount\r\n      );\r\n    });\r\n  });\r\n\r\n  describe(\"input\", () => {\r\n    it(\"has an `input`\", () => {\r\n      expect(transaction).toHaveProperty(\"input\");\r\n    });\r\n\r\n    it(\"has `timestamp` in the `input`\", () => {\r\n      expect(transaction.input).toHaveProperty(\"timestamp\");\r\n    });\r\n\r\n    it(\"sets the `amount` to the `senderWallet` balance\", () => {\r\n      expect(transaction.input.amount).toEqual(senderWallet.balance);\r\n    });\r\n\r\n    it(\"sets the `address` to the `senderWallet` publicKey\", () => {\r\n      expect(transaction.input.address).toEqual(senderWallet.publicKey);\r\n    });\r\n\r\n    it(\"signs the input\", () => {\r\n      expect(\r\n        verifySignature({\r\n          publicKey: senderWallet.publicKey,\r\n          data: transaction.outputMap,\r\n          signature: transaction.input.signature\r\n        })\r\n      ).toBe(true);\r\n    });\r\n  });\r\n});\r\n"]}