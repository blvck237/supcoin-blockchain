{"version":3,"sources":["index.js"],"names":["uuid","require","verifySignature","Transaction","constructor","senderWallet","receiver","amount","id","outputMap","createOutputMap","input","createInput","validateTransaction","transaction","address","signature","outputTotal","Object","values","reduce","total","outputAmount","console","log","setTimeout","publicKey","data","balance","timestamp","Date","now","sign","module","exports"],"mappings":"AAAA,MAAMA,IAAI,GAAGC,OAAO,CAAC,SAAD,CAApB;;AACA,MAAM;AAAEC,EAAAA;AAAF,IAAsBD,OAAO,CAAC,mBAAD,CAAnC;;AAEA,MAAME,WAAN,CAAkB;AAChBC,EAAAA,WAAW,CAAC;AAAEC,IAAAA,YAAF;AAAgBC,IAAAA,QAAhB;AAA0BC,IAAAA;AAA1B,GAAD,EAAqC;AAC9C,SAAKC,EAAL,GAAUR,IAAI,EAAd;AACA,SAAKS,SAAL,GAAiB,KAAKC,eAAL,CAAqB;AAAEL,MAAAA,YAAF;AAAgBC,MAAAA,QAAhB;AAA0BC,MAAAA;AAA1B,KAArB,CAAjB;AACA,SAAKI,KAAL,GAAa,KAAKC,WAAL,CAAiB;AAAEP,MAAAA,YAAF;AAAgBI,MAAAA,SAAS,EAAE,KAAKA;AAAhC,KAAjB,CAAb;AACD;;AAED,SAAOI,mBAAP,CAA2BC,WAA3B,EAAwC;AACtC,UAAM;AACJH,MAAAA,KAAK,EAAE;AAAEI,QAAAA,OAAF;AAAWR,QAAAA,MAAX;AAAmBS,QAAAA;AAAnB,OADH;AAEJP,MAAAA;AAFI,QAGFK,WAHJ;AAKA,UAAMG,WAAW,GAAGC,MAAM,CAACC,MAAP,CAAcV,SAAd,EAAyBW,MAAzB,CAClB,CAACC,KAAD,EAAQC,YAAR,KAAyB;AACvBD,MAAAA,KAAK,GAAGA,KAAK,GAAGC,YAAhB;AACAC,MAAAA,OAAO,CAACC,GAAR,CAAY,mCAAZ,EAAiDH,KAAjD;AACA,aAAOA,KAAP;AACD,KALiB,CAApB;AAQAI,IAAAA,UAAU,CAAC,MAAM;AACf,UAAIlB,MAAM,KAAKU,WAAf,EAA4B;AAC1BM,QAAAA,OAAO,CAACC,GAAR,CAAY,yCAAZ,EAAuDP,WAAvD;AACAM,QAAAA,OAAO,CAACC,GAAR,CAAY,oCAAZ,EAAkDjB,MAAlD;AACAgB,QAAAA,OAAO,CAACC,GAAR,CAAY,mCAAmCT,OAA/C;AACA,eAAO,KAAP;AACD;;AACD,UACE,CAACb,eAAe,CAAC;AAAEwB,QAAAA,SAAS,EAAEX,OAAb;AAAsBY,QAAAA,IAAI,EAAElB,SAA5B;AAAuCO,QAAAA;AAAvC,OAAD,CADlB,EAEE;AACAO,QAAAA,OAAO,CAACC,GAAR,CAAY,iCAAiCT,OAA7C;AACA,eAAO,KAAP;AACD;;AACD,aAAO,IAAP;AACD,KAdS,EAcP,IAdO,CAAV;AAeD;;AAEDL,EAAAA,eAAe,CAAC;AAAEL,IAAAA,YAAF;AAAgBC,IAAAA,QAAhB;AAA0BC,IAAAA;AAA1B,GAAD,EAAqC;AAClD,UAAME,SAAS,GAAG,EAAlB;AAEAA,IAAAA,SAAS,CAACH,QAAD,CAAT,GAAsBC,MAAtB;AACAE,IAAAA,SAAS,CAACJ,YAAY,CAACqB,SAAd,CAAT,GAAoCrB,YAAY,CAACuB,OAAb,GAAuBrB,MAA3D;AAEA,WAAOE,SAAP;AACD;;AAEDG,EAAAA,WAAW,CAAC;AAAEP,IAAAA,YAAF;AAAgBI,IAAAA;AAAhB,GAAD,EAA8B;AACvC,WAAO;AACLoB,MAAAA,SAAS,EAAEC,IAAI,CAACC,GAAL,EADN;AAELxB,MAAAA,MAAM,EAAEF,YAAY,CAACuB,OAFhB;AAGLb,MAAAA,OAAO,EAAEV,YAAY,CAACqB,SAHjB;AAILV,MAAAA,SAAS,EAAEX,YAAY,CAAC2B,IAAb,CAAkBvB,SAAlB;AAJN,KAAP;AAMD;;AAtDe;;AAyDlBwB,MAAM,CAACC,OAAP,GAAiB/B,WAAjB","sourcesContent":["const uuid = require(\"uuid/v1\");\r\nconst { verifySignature } = require(\"../../utils/index\");\r\n\r\nclass Transaction {\r\n  constructor({ senderWallet, receiver, amount }) {\r\n    this.id = uuid();\r\n    this.outputMap = this.createOutputMap({ senderWallet, receiver, amount });\r\n    this.input = this.createInput({ senderWallet, outputMap: this.outputMap });\r\n  }\r\n\r\n  static validateTransaction(transaction) {\r\n    const {\r\n      input: { address, amount, signature },\r\n      outputMap\r\n    } = transaction;\r\n\r\n    const outputTotal = Object.values(outputMap).reduce(\r\n      (total, outputAmount) => {\r\n        total = total + outputAmount;\r\n        console.log(\"Log: validateTransaction -> total\", total);\r\n        return total;\r\n      }\r\n    );\r\n\r\n    setTimeout(() => {\r\n      if (amount !== outputTotal) {\r\n        console.log(\"Log: validateTransaction -> outputTotal\", outputTotal);\r\n        console.log(\"Log: validateTransaction -> amount\", amount);\r\n        console.log(\"Log: Invalid transaction from \" + address);\r\n        return false;\r\n      }\r\n      if (\r\n        !verifySignature({ publicKey: address, data: outputMap, signature })\r\n      ) {\r\n        console.log(\"Log: Invalid signature from \" + address);\r\n        return false;\r\n      }\r\n      return true;\r\n    }, 1500);\r\n  }\r\n\r\n  createOutputMap({ senderWallet, receiver, amount }) {\r\n    const outputMap = {};\r\n\r\n    outputMap[receiver] = amount;\r\n    outputMap[senderWallet.publicKey] = senderWallet.balance - amount;\r\n\r\n    return outputMap;\r\n  }\r\n\r\n  createInput({ senderWallet, outputMap }) {\r\n    return {\r\n      timestamp: Date.now(),\r\n      amount: senderWallet.balance,\r\n      address: senderWallet.publicKey,\r\n      signature: senderWallet.sign(outputMap)\r\n    };\r\n  }\r\n}\r\n\r\nmodule.exports = Transaction;\r\n"]}