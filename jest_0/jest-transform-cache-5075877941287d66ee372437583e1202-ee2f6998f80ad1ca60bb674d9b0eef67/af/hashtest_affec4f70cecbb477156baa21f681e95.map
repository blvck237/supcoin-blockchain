{"version":3,"sources":["hash.test.js"],"names":["cryptoHash","require","describe","it","expect","toEqual","foo","originalHash","a","not"],"mappings":"AAAA,MAAMA,UAAU,GAAGC,OAAO,CAAC,sBAAD,CAA1B;;AAEAC,QAAQ,CAAC,QAAD,EAAW,MAAM;AACvBC,EAAAA,EAAE,CAAC,wBAAD,EAA2B,MAAM;AACjCC,IAAAA,MAAM,CAACJ,UAAU,CAAC,KAAD,CAAX,CAAN,CAA0BK,OAA1B,CACE,kEADF;AAGD,GAJC,CAAF;AAMAF,EAAAA,EAAE,CAAC,qEAAD,EAAwE,MAAM;AAC9EC,IAAAA,MAAM,CAACJ,UAAU,CAAC,KAAD,EAAQ,KAAR,EAAe,OAAf,CAAX,CAAN,CAA0CK,OAA1C,CACEL,UAAU,CAAC,OAAD,EAAU,KAAV,EAAiB,KAAjB,CADZ;AAGD,GAJC,CAAF;AAMAG,EAAAA,EAAE,CAAC,qEAAD,EAAwE,MAAM;AAC9E,UAAMG,GAAG,GAAG,EAAZ;AACA,UAAMC,YAAY,GAAGP,UAAU,CAACM,GAAD,CAA/B;AACAA,IAAAA,GAAG,CAACE,CAAJ,GAAQ,GAAR;AACAJ,IAAAA,MAAM,CAACJ,UAAU,CAAC,KAAD,CAAX,CAAN,CAA0BS,GAA1B,CAA8BJ,OAA9B,CAAsCE,YAAtC;AACD,GALC,CAAF;AAMD,CAnBO,CAAR","sourcesContent":["const cryptoHash = require(\"../utils/crypto-hash\");\r\n\r\ndescribe(\"hash()\", () => {\r\n  it(\"generates a sha256 key\", () => {\r\n    expect(cryptoHash(\"foo\")).toEqual(\r\n      \"b2213295d564916f89a6a42455567c87c3f480fcd7a1c15e220f17d7169a790b\"\r\n    );\r\n  });\r\n\r\n  it(\"produces the same hash with the same parameters no matter the order\", () => {\r\n    expect(cryptoHash(\"one\", \"two\", \"three\")).toEqual(\r\n      cryptoHash(\"three\", \"two\", \"one\")\r\n    );\r\n  });\r\n\r\n  it(\"produces a unique hash when the properties have changed on an input\", () => {\r\n    const foo = {};\r\n    const originalHash = cryptoHash(foo);\r\n    foo.a = 'a';\r\n    expect(cryptoHash(\"foo\")).not.toEqual(originalHash);\r\n  });\r\n});\r\n"]}