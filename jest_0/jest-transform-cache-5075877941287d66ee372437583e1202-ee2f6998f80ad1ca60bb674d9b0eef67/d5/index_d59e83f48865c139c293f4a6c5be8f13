2653bd63d11b65aafe74a7e503935241
const uuid = require("uuid/v1");

const {
  verifySignature
} = require("../../utils/index");

class Transaction {
  constructor({
    senderWallet,
    receiver,
    amount
  }) {
    this.id = uuid();
    this.outputMap = this.createOutputMap({
      senderWallet,
      receiver,
      amount
    });
    this.input = this.createInput({
      senderWallet,
      outputMap: this.outputMap
    });
  }

  createOutputMap({
    senderWallet,
    receiver,
    amount
  }) {
    const outputMap = {};
    outputMap[receiver] = amount;
    outputMap[senderWallet.publicKey] = senderWallet.balance - amount;
    return outputMap;
  }

  createInput({
    senderWallet,
    outputMap
  }) {
    return {
      timestamp: Date.now(),
      amount: senderWallet.balance,
      address: senderWallet.publicKey,
      signature: senderWallet.sign(outputMap)
    };
  }

  static validateTransaction(transaction) {
    const {
      input: {
        address,
        amount,
        signature
      },
      outputMap
    } = transaction;
    const outputTotal = Object.values(outputMap).reduce((total, outputAmount) => total + outputAmount);

    if (amount !== outputTotal) {
      console.error("error: Invalid transaction from " + address);
      return false;
    }

    if (!verifySignature({
      publicKey: address,
      data: outputMap,
      signature
    })) {
      console.error("error: Invalid signature from " + address);
      return false;
    }

    return true;
  }

}

module.exports = Transaction;
//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbImluZGV4LmpzIl0sIm5hbWVzIjpbInV1aWQiLCJyZXF1aXJlIiwidmVyaWZ5U2lnbmF0dXJlIiwiVHJhbnNhY3Rpb24iLCJjb25zdHJ1Y3RvciIsInNlbmRlcldhbGxldCIsInJlY2VpdmVyIiwiYW1vdW50IiwiaWQiLCJvdXRwdXRNYXAiLCJjcmVhdGVPdXRwdXRNYXAiLCJpbnB1dCIsImNyZWF0ZUlucHV0IiwicHVibGljS2V5IiwiYmFsYW5jZSIsInRpbWVzdGFtcCIsIkRhdGUiLCJub3ciLCJhZGRyZXNzIiwic2lnbmF0dXJlIiwic2lnbiIsInZhbGlkYXRlVHJhbnNhY3Rpb24iLCJ0cmFuc2FjdGlvbiIsIm91dHB1dFRvdGFsIiwiT2JqZWN0IiwidmFsdWVzIiwicmVkdWNlIiwidG90YWwiLCJvdXRwdXRBbW91bnQiLCJjb25zb2xlIiwiZXJyb3IiLCJkYXRhIiwibW9kdWxlIiwiZXhwb3J0cyJdLCJtYXBwaW5ncyI6IkFBQUEsTUFBTUEsSUFBSSxHQUFHQyxPQUFPLENBQUMsU0FBRCxDQUFwQjs7QUFDQSxNQUFNO0FBQUVDLEVBQUFBO0FBQUYsSUFBc0JELE9BQU8sQ0FBQyxtQkFBRCxDQUFuQzs7QUFFQSxNQUFNRSxXQUFOLENBQWtCO0FBQ2hCQyxFQUFBQSxXQUFXLENBQUM7QUFBRUMsSUFBQUEsWUFBRjtBQUFnQkMsSUFBQUEsUUFBaEI7QUFBMEJDLElBQUFBO0FBQTFCLEdBQUQsRUFBcUM7QUFDOUMsU0FBS0MsRUFBTCxHQUFVUixJQUFJLEVBQWQ7QUFDQSxTQUFLUyxTQUFMLEdBQWlCLEtBQUtDLGVBQUwsQ0FBcUI7QUFBRUwsTUFBQUEsWUFBRjtBQUFnQkMsTUFBQUEsUUFBaEI7QUFBMEJDLE1BQUFBO0FBQTFCLEtBQXJCLENBQWpCO0FBQ0EsU0FBS0ksS0FBTCxHQUFhLEtBQUtDLFdBQUwsQ0FBaUI7QUFBRVAsTUFBQUEsWUFBRjtBQUFnQkksTUFBQUEsU0FBUyxFQUFFLEtBQUtBO0FBQWhDLEtBQWpCLENBQWI7QUFDRDs7QUFFREMsRUFBQUEsZUFBZSxDQUFDO0FBQUVMLElBQUFBLFlBQUY7QUFBZ0JDLElBQUFBLFFBQWhCO0FBQTBCQyxJQUFBQTtBQUExQixHQUFELEVBQXFDO0FBQ2xELFVBQU1FLFNBQVMsR0FBRyxFQUFsQjtBQUVBQSxJQUFBQSxTQUFTLENBQUNILFFBQUQsQ0FBVCxHQUFzQkMsTUFBdEI7QUFDQUUsSUFBQUEsU0FBUyxDQUFDSixZQUFZLENBQUNRLFNBQWQsQ0FBVCxHQUFvQ1IsWUFBWSxDQUFDUyxPQUFiLEdBQXVCUCxNQUEzRDtBQUVBLFdBQU9FLFNBQVA7QUFDRDs7QUFFREcsRUFBQUEsV0FBVyxDQUFDO0FBQUVQLElBQUFBLFlBQUY7QUFBZ0JJLElBQUFBO0FBQWhCLEdBQUQsRUFBOEI7QUFDdkMsV0FBTztBQUNMTSxNQUFBQSxTQUFTLEVBQUVDLElBQUksQ0FBQ0MsR0FBTCxFQUROO0FBRUxWLE1BQUFBLE1BQU0sRUFBRUYsWUFBWSxDQUFDUyxPQUZoQjtBQUdMSSxNQUFBQSxPQUFPLEVBQUViLFlBQVksQ0FBQ1EsU0FIakI7QUFJTE0sTUFBQUEsU0FBUyxFQUFFZCxZQUFZLENBQUNlLElBQWIsQ0FBa0JYLFNBQWxCO0FBSk4sS0FBUDtBQU1EOztBQUVELFNBQU9ZLG1CQUFQLENBQTJCQyxXQUEzQixFQUF3QztBQUN0QyxVQUFNO0FBQ0pYLE1BQUFBLEtBQUssRUFBRTtBQUFFTyxRQUFBQSxPQUFGO0FBQVdYLFFBQUFBLE1BQVg7QUFBbUJZLFFBQUFBO0FBQW5CLE9BREg7QUFFSlYsTUFBQUE7QUFGSSxRQUdGYSxXQUhKO0FBS0EsVUFBTUMsV0FBVyxHQUFHQyxNQUFNLENBQUNDLE1BQVAsQ0FBY2hCLFNBQWQsRUFBeUJpQixNQUF6QixDQUNsQixDQUFDQyxLQUFELEVBQVFDLFlBQVIsS0FBeUJELEtBQUssR0FBR0MsWUFEZixDQUFwQjs7QUFJQSxRQUFJckIsTUFBTSxLQUFLZ0IsV0FBZixFQUE0QjtBQUMxQk0sTUFBQUEsT0FBTyxDQUFDQyxLQUFSLENBQWMscUNBQXFDWixPQUFuRDtBQUNBLGFBQU8sS0FBUDtBQUNEOztBQUNELFFBQUksQ0FBQ2hCLGVBQWUsQ0FBQztBQUFFVyxNQUFBQSxTQUFTLEVBQUVLLE9BQWI7QUFBc0JhLE1BQUFBLElBQUksRUFBRXRCLFNBQTVCO0FBQXVDVSxNQUFBQTtBQUF2QyxLQUFELENBQXBCLEVBQTBFO0FBQ3hFVSxNQUFBQSxPQUFPLENBQUNDLEtBQVIsQ0FBYyxtQ0FBbUNaLE9BQWpEO0FBQ0EsYUFBTyxLQUFQO0FBQ0Q7O0FBQ0QsV0FBTyxJQUFQO0FBQ0Q7O0FBNUNlOztBQStDbEJjLE1BQU0sQ0FBQ0MsT0FBUCxHQUFpQjlCLFdBQWpCIiwic291cmNlc0NvbnRlbnQiOlsiY29uc3QgdXVpZCA9IHJlcXVpcmUoXCJ1dWlkL3YxXCIpO1xyXG5jb25zdCB7IHZlcmlmeVNpZ25hdHVyZSB9ID0gcmVxdWlyZShcIi4uLy4uL3V0aWxzL2luZGV4XCIpO1xyXG5cclxuY2xhc3MgVHJhbnNhY3Rpb24ge1xyXG4gIGNvbnN0cnVjdG9yKHsgc2VuZGVyV2FsbGV0LCByZWNlaXZlciwgYW1vdW50IH0pIHtcclxuICAgIHRoaXMuaWQgPSB1dWlkKCk7XHJcbiAgICB0aGlzLm91dHB1dE1hcCA9IHRoaXMuY3JlYXRlT3V0cHV0TWFwKHsgc2VuZGVyV2FsbGV0LCByZWNlaXZlciwgYW1vdW50IH0pO1xyXG4gICAgdGhpcy5pbnB1dCA9IHRoaXMuY3JlYXRlSW5wdXQoeyBzZW5kZXJXYWxsZXQsIG91dHB1dE1hcDogdGhpcy5vdXRwdXRNYXAgfSk7XHJcbiAgfVxyXG5cclxuICBjcmVhdGVPdXRwdXRNYXAoeyBzZW5kZXJXYWxsZXQsIHJlY2VpdmVyLCBhbW91bnQgfSkge1xyXG4gICAgY29uc3Qgb3V0cHV0TWFwID0ge307XHJcblxyXG4gICAgb3V0cHV0TWFwW3JlY2VpdmVyXSA9IGFtb3VudDtcclxuICAgIG91dHB1dE1hcFtzZW5kZXJXYWxsZXQucHVibGljS2V5XSA9IHNlbmRlcldhbGxldC5iYWxhbmNlIC0gYW1vdW50O1xyXG5cclxuICAgIHJldHVybiBvdXRwdXRNYXA7XHJcbiAgfVxyXG5cclxuICBjcmVhdGVJbnB1dCh7IHNlbmRlcldhbGxldCwgb3V0cHV0TWFwIH0pIHtcclxuICAgIHJldHVybiB7XHJcbiAgICAgIHRpbWVzdGFtcDogRGF0ZS5ub3coKSxcclxuICAgICAgYW1vdW50OiBzZW5kZXJXYWxsZXQuYmFsYW5jZSxcclxuICAgICAgYWRkcmVzczogc2VuZGVyV2FsbGV0LnB1YmxpY0tleSxcclxuICAgICAgc2lnbmF0dXJlOiBzZW5kZXJXYWxsZXQuc2lnbihvdXRwdXRNYXApXHJcbiAgICB9O1xyXG4gIH1cclxuXHJcbiAgc3RhdGljIHZhbGlkYXRlVHJhbnNhY3Rpb24odHJhbnNhY3Rpb24pIHtcclxuICAgIGNvbnN0IHtcclxuICAgICAgaW5wdXQ6IHsgYWRkcmVzcywgYW1vdW50LCBzaWduYXR1cmUgfSxcclxuICAgICAgb3V0cHV0TWFwXHJcbiAgICB9ID0gdHJhbnNhY3Rpb247XHJcblxyXG4gICAgY29uc3Qgb3V0cHV0VG90YWwgPSBPYmplY3QudmFsdWVzKG91dHB1dE1hcCkucmVkdWNlKFxyXG4gICAgICAodG90YWwsIG91dHB1dEFtb3VudCkgPT4gdG90YWwgKyBvdXRwdXRBbW91bnRcclxuICAgICk7XHJcblxyXG4gICAgaWYgKGFtb3VudCAhPT0gb3V0cHV0VG90YWwpIHtcclxuICAgICAgY29uc29sZS5lcnJvcihcImVycm9yOiBJbnZhbGlkIHRyYW5zYWN0aW9uIGZyb20gXCIgKyBhZGRyZXNzKTtcclxuICAgICAgcmV0dXJuIGZhbHNlO1xyXG4gICAgfVxyXG4gICAgaWYgKCF2ZXJpZnlTaWduYXR1cmUoeyBwdWJsaWNLZXk6IGFkZHJlc3MsIGRhdGE6IG91dHB1dE1hcCwgc2lnbmF0dXJlIH0pKSB7XHJcbiAgICAgIGNvbnNvbGUuZXJyb3IoXCJlcnJvcjogSW52YWxpZCBzaWduYXR1cmUgZnJvbSBcIiArIGFkZHJlc3MpO1xyXG4gICAgICByZXR1cm4gZmFsc2U7XHJcbiAgICB9XHJcbiAgICByZXR1cm4gdHJ1ZTtcclxuICB9XHJcbn1cclxuXHJcbm1vZHVsZS5leHBvcnRzID0gVHJhbnNhY3Rpb247XHJcbiJdfQ==