{"version":3,"sources":["index.js"],"names":["Transaction","require","INITIAL_BALANCE","ec","cryptoHash","Wallet","constructor","balance","keyPair","genKeyPair","publicKey","getPublic","encode","sign","data","createTransaction","receiver","amount","Error","senderWallet","module","exports"],"mappings":"AAAA,MAAMA,WAAW,GAAGC,OAAO,CAAC,eAAD,CAA3B;;AACA,MAAM;AAAEC,EAAAA;AAAF,IAAsBD,OAAO,CAAC,WAAD,CAAnC;;AACA,MAAM;AAAEE,EAAAA;AAAF,IAASF,OAAO,CAAC,UAAD,CAAtB;;AACA,MAAM;AAAEG,EAAAA;AAAF,IAAiBH,OAAO,CAAC,UAAD,CAA9B;;AAEA,MAAMI,MAAN,CAAa;AACXC,EAAAA,WAAW,GAAG;AACZ,SAAKC,OAAL,GAAeL,eAAf;AAEA,SAAKM,OAAL,GAAeL,EAAE,CAACM,UAAH,EAAf;AAEA,SAAKC,SAAL,GAAiB,KAAKF,OAAL,CAAaG,SAAb,GAAyBC,MAAzB,CAAgC,KAAhC,CAAjB;AACD;;AAEDC,EAAAA,IAAI,CAACC,IAAD,EAAO;AACT,WAAO,KAAKN,OAAL,CAAaK,IAAb,CAAkBT,UAAU,CAACU,IAAD,CAA5B,CAAP;AACD;;AAEDC,EAAAA,iBAAiB,CAAC;AAAEC,IAAAA,QAAF;AAAYC,IAAAA;AAAZ,GAAD,EAAuB;AACtC,QAAIA,MAAM,GAAG,KAAKV,OAAlB,EAA2B;AACzB,YAAM,IAAIW,KAAJ,CAAU,wBAAV,CAAN;AACD;;AACD,WAAO,IAAIlB,WAAJ,CAAgB;AAACmB,MAAAA,YAAY,EAAE,IAAf;AAAqBH,MAAAA,QAArB;AAA+BC,MAAAA;AAA/B,KAAhB,CAAP;AACD;;AAlBU;;AAqBbG,MAAM,CAACC,OAAP,GAAiBhB,MAAjB","sourcesContent":["const Transaction = require(\"./transaction\");\r\nconst { INITIAL_BALANCE } = require(\"../config\");\r\nconst { ec } = require(\"../utils\");\r\nconst { cryptoHash } = require(\"../utils\");\r\n\r\nclass Wallet {\r\n  constructor() {\r\n    this.balance = INITIAL_BALANCE;\r\n\r\n    this.keyPair = ec.genKeyPair();\r\n\r\n    this.publicKey = this.keyPair.getPublic().encode(\"hex\");\r\n  }\r\n\r\n  sign(data) {\r\n    return this.keyPair.sign(cryptoHash(data));\r\n  }\r\n\r\n  createTransaction({ receiver, amount }) {\r\n    if (amount > this.balance) {\r\n      throw new Error(\"Amount exceeds balance\");\r\n    }\r\n    return new Transaction({senderWallet: this, receiver, amount});\r\n  }\r\n}\r\n\r\nmodule.exports = Wallet;\r\n"]}