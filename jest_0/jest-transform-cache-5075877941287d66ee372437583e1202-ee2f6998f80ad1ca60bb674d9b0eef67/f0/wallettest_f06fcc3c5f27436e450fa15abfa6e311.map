{"version":3,"sources":["wallet.test.js"],"names":["Wallet","require","Transaction","verifySignature","describe","wallet","beforeEach","it","expect","toHaveProperty","data","publicKey","signature","sign","toBe","createTransaction","amount","receiver","toThrow","transaction"],"mappings":"AAAA,MAAMA,MAAM,GAAGC,OAAO,CAAC,iBAAD,CAAtB;;AACA,MAAMC,WAAW,GAAGD,OAAO,CAAC,uBAAD,CAA3B;;AACA,MAAM;AAAEE,EAAAA;AAAF,IAAsBF,OAAO,CAAC,UAAD,CAAnC;;AAEAG,QAAQ,CAAC,QAAD,EAAW,MAAM;AACvB,MAAIC,MAAJ;AAEAC,EAAAA,UAAU,CAAC,MAAM;AACfD,IAAAA,MAAM,GAAG,IAAIL,MAAJ,EAAT;AACD,GAFS,CAAV;AAIAO,EAAAA,EAAE,CAAC,eAAD,EAAkB,MAAM;AACxBC,IAAAA,MAAM,CAACH,MAAD,CAAN,CAAeI,cAAf,CAA8B,SAA9B;AACD,GAFC,CAAF;AAIAF,EAAAA,EAAE,CAAC,kBAAD,EAAqB,MAAM;AAC3BC,IAAAA,MAAM,CAACH,MAAD,CAAN,CAAeI,cAAf,CAA8B,WAA9B;AACD,GAFC,CAAF;AAIAL,EAAAA,QAAQ,CAAC,cAAD,EAAiB,MAAM;AAC7B,UAAMM,IAAI,GAAG,SAAb;AACAH,IAAAA,EAAE,CAAC,0BAAD,EAA6B,MAAM;AACnCC,MAAAA,MAAM,CACJL,eAAe,CAAC;AACdQ,QAAAA,SAAS,EAAEN,MAAM,CAACM,SADJ;AAEdD,QAAAA,IAFc;AAGdE,QAAAA,SAAS,EAAEP,MAAM,CAACQ,IAAP,CAAYH,IAAZ;AAHG,OAAD,CADX,CAAN,CAMEI,IANF,CAMO,IANP;AAOD,KARC,CAAF;AASAP,IAAAA,EAAE,CAAC,wCAAD,EAA2C,MAAM;AACjDC,MAAAA,MAAM,CACJL,eAAe,CAAC;AACdQ,QAAAA,SAAS,EAAEN,MAAM,CAACM,SADJ;AAEdD,QAAAA,IAFc;AAGdE,QAAAA,SAAS,EAAE,IAAIZ,MAAJ,GAAaa,IAAb,CAAkBH,IAAlB;AAHG,OAAD,CADX,CAAN,CAMEI,IANF,CAMO,KANP;AAOD,KARC,CAAF;AASD,GApBO,CAAR;AAsBAV,EAAAA,QAAQ,CAAC,mBAAD,EAAsB,MAAM;AAClCA,IAAAA,QAAQ,CAAC,oCAAD,EAAuC,MAAM;AACnDG,MAAAA,EAAE,CAAC,iBAAD,EAAoB,MAAM;AAC1BC,QAAAA,MAAM,CAAC,MACLH,MAAM,CAACU,iBAAP,CAAyB;AAAEC,UAAAA,MAAM,EAAE,OAAV;AAAmBC,UAAAA,QAAQ,EAAE;AAA7B,SAAzB,CADI,CAAN,CAEEC,OAFF,CAEU,wBAFV;AAGD,OAJC,CAAF;AAKD,KANO,CAAR;AAQAd,IAAAA,QAAQ,CAAC,yBAAD,EAA4B,MAAM;AACxC,UAAIe,WAAJ,EAAiBH,MAAjB,EAAyBC,QAAzB;AAEAX,MAAAA,UAAU,CAAC,MAAM;AACfU,QAAAA,MAAM,GAAG,EAAT;AACAC,QAAAA,QAAQ,GAAG,MAAX;AACAE,QAAAA,WAAW,GAAGd,MAAM,CAACU,iBAAP,CAAyB;AAAEC,UAAAA,MAAF;AAAUC,UAAAA;AAAV,SAAzB,CAAd;AACD,OAJS,CAAV;AAMAV,MAAAA,EAAE,CAAC,sCAAD,EAAyC,MAAM;AAC/CC,QAAAA,MAAM,CAACW,WAAW,YAAYjB,WAAxB,CAAN,CAA2CY,IAA3C,CAAgD,IAAhD;AACD,OAFC,CAAF;AAIAP,MAAAA,EAAE,CAAC,qCAAD,EAAwC,MAAM,CAAE,CAAhD,CAAF;AAEAA,MAAAA,EAAE,CAAC,oCAAD,EAAuC,MAAM,CAAE,CAA/C,CAAF;AACD,KAhBO,CAAR;AAiBD,GA1BO,CAAR;AA2BD,CAhEO,CAAR","sourcesContent":["const Wallet = require(\"../wallet/index\");\r\nconst Transaction = require(\"../wallet/transaction\");\r\nconst { verifySignature } = require(\"../utils\");\r\n\r\ndescribe(\"Wallet\", () => {\r\n  let wallet;\r\n\r\n  beforeEach(() => {\r\n    wallet = new Wallet();\r\n  });\r\n\r\n  it(\"has a balance\", () => {\r\n    expect(wallet).toHaveProperty(\"balance\");\r\n  });\r\n\r\n  it(\"has a public key\", () => {\r\n    expect(wallet).toHaveProperty(\"publicKey\");\r\n  });\r\n\r\n  describe(\"signing data\", () => {\r\n    const data = \"foo-bar\";\r\n    it(\"verifies valid signature\", () => {\r\n      expect(\r\n        verifySignature({\r\n          publicKey: wallet.publicKey,\r\n          data,\r\n          signature: wallet.sign(data)\r\n        })\r\n      ).toBe(true);\r\n    });\r\n    it(\"does not verifies an invalid signature\", () => {\r\n      expect(\r\n        verifySignature({\r\n          publicKey: wallet.publicKey,\r\n          data,\r\n          signature: new Wallet().sign(data)\r\n        })\r\n      ).toBe(false);\r\n    });\r\n  });\r\n\r\n  describe(\"createTransaction\", () => {\r\n    describe(\"and the amount exceeds the balance\", () => {\r\n      it(\"throws an error\", () => {\r\n        expect(() =>\r\n          wallet.createTransaction({ amount: 9999999, receiver: \"Jojo\" })\r\n        ).toThrow(\"Amount exceeds balance\");\r\n      });\r\n    });\r\n\r\n    describe(\"and the amount is valid\", () => {\r\n      let transaction, amount, receiver;\r\n\r\n      beforeEach(() => {\r\n        amount = 50;\r\n        receiver = \"Jojo\";\r\n        transaction = wallet.createTransaction({ amount, receiver });\r\n      });\r\n\r\n      it(\"creates an instance of `Transaction`\", () => {\r\n        expect(transaction instanceof Transaction).toBe(true);\r\n      });\r\n\r\n      it(\"matches transaction input in wallet\", () => {});\r\n\r\n      it(\"outputs the amount of the receiver\", () => {});\r\n    });\r\n  });\r\n});\r\n"]}